// Prisma schema pour l'historique des discussions
// Ce modèle stocke chaque échange (question/réponse) avec un identifiant de session

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String   // hashé
  createdAt DateTime @default(now())
  messages  Message[]
  discussions Discussion[]
}

model Discussion {
  id        String   @id @default(uuid())
  title     String?
  createdAt DateTime @default(now())
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  messages  Message[]
}

model Message {
  id           String      @id @default(uuid())
  role         String      // 'user' ou 'agent'
  content      String
  createdAt    DateTime    @default(now())
  userId       String?
  user         User?       @relation(fields: [userId], references: [id])
  discussionId String?
  discussion   Discussion? @relation(fields: [discussionId], references: [id], onDelete: Cascade)
}

model Document {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  chunks    DocumentChunk[]
}

model DocumentChunk {
  id         String   @id @default(uuid())
  content    String
  embedding  String  // Stocké en JSON (array de float)
  document   Document @relation(fields: [documentId], references: [id])
  documentId String
  createdAt  DateTime @default(now())
}

model ApiKey {
  id        String   @id @default(uuid())
  key       String   @unique
  createdAt DateTime @default(now())
}
